// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class flatSale extends ethereum.Event {
  get params(): flatSale__Params {
    return new flatSale__Params(this);
  }
}

export class flatSale__Params {
  _event: flatSale;

  constructor(event: flatSale) {
    this._event = event;
  }

  get nonce(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get assetAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class lazy_Auction extends ethereum.Event {
  get params(): lazy_Auction__Params {
    return new lazy_Auction__Params(this);
  }
}

export class lazy_Auction__Params {
  _event: lazy_Auction;

  constructor(event: lazy_Auction) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get assetAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get winner(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get seller(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class lazy_Auction_duration extends ethereum.Event {
  get params(): lazy_Auction_duration__Params {
    return new lazy_Auction_duration__Params(this);
  }
}

export class lazy_Auction_duration__Params {
  _event: lazy_Auction_duration;

  constructor(event: lazy_Auction_duration) {
    this._event = event;
  }

  get startTime(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Contract__verifySellerSignInputSellerDetailsStruct extends ethereum.Tuple {
  get nonce(): BigInt {
    return this[0].toBigInt();
  }

  get seller(): Address {
    return this[1].toAddress();
  }

  get assetAddress(): Address {
    return this[2].toAddress();
  }

  get paymentAssetAddress(): Address {
    return this[3].toAddress();
  }

  get tokenId(): BigInt {
    return this[4].toBigInt();
  }

  get royality(): BigInt {
    return this[5].toBigInt();
  }

  get amount(): BigInt {
    return this[6].toBigInt();
  }

  get seller_signature(): Bytes {
    return this[7].toBytes();
  }

  get tokenUri(): string {
    return this[8].toString();
  }

  get startTime(): BigInt {
    return this[9].toBigInt();
  }

  get endTime(): BigInt {
    return this[10].toBigInt();
  }
}

export class Contract__verifyWinnerSignInputWinnerDetailsStruct extends ethereum.Tuple {
  get winnerAddress(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }

  get winnerSignature(): Bytes {
    return this[2].toBytes();
  }

  get bidTime(): BigInt {
    return this[3].toBigInt();
  }

  get nonce(): BigInt {
    return this[4].toBigInt();
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  decimalPrecision(): BigInt {
    let result = super.call(
      "decimalPrecision",
      "decimalPrecision():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_decimalPrecision(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "decimalPrecision",
      "decimalPrecision():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSigner(hash: Bytes, _signature: Bytes): Address {
    let result = super.call("getSigner", "getSigner(bytes32,bytes):(address)", [
      ethereum.Value.fromFixedBytes(hash),
      ethereum.Value.fromBytes(_signature)
    ]);

    return result[0].toAddress();
  }

  try_getSigner(hash: Bytes, _signature: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getSigner",
      "getSigner(bytes32,bytes):(address)",
      [
        ethereum.Value.fromFixedBytes(hash),
        ethereum.Value.fromBytes(_signature)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isNonceProcessed(param0: BigInt): boolean {
    let result = super.call(
      "isNonceProcessed",
      "isNonceProcessed(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBoolean();
  }

  try_isNonceProcessed(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isNonceProcessed",
      "isNonceProcessed(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  platFormFeePercent(): BigInt {
    let result = super.call(
      "platFormFeePercent",
      "platFormFeePercent():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_platFormFeePercent(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "platFormFeePercent",
      "platFormFeePercent():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  verifySellerSign(
    sellerDetails: Contract__verifySellerSignInputSellerDetailsStruct
  ): Address {
    let result = super.call(
      "verifySellerSign",
      "verifySellerSign((uint256,address,address,address,uint256,uint96,uint256,bytes,string,uint256,uint256)):(address)",
      [ethereum.Value.fromTuple(sellerDetails)]
    );

    return result[0].toAddress();
  }

  try_verifySellerSign(
    sellerDetails: Contract__verifySellerSignInputSellerDetailsStruct
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "verifySellerSign",
      "verifySellerSign((uint256,address,address,address,uint256,uint96,uint256,bytes,string,uint256,uint256)):(address)",
      [ethereum.Value.fromTuple(sellerDetails)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  verifyWinnerSign(
    winnerDetails: Contract__verifyWinnerSignInputWinnerDetailsStruct
  ): Address {
    let result = super.call(
      "verifyWinnerSign",
      "verifyWinnerSign((address,uint256,bytes,uint256,uint256)):(address)",
      [ethereum.Value.fromTuple(winnerDetails)]
    );

    return result[0].toAddress();
  }

  try_verifyWinnerSign(
    winnerDetails: Contract__verifyWinnerSignInputWinnerDetailsStruct
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "verifyWinnerSign",
      "verifyWinnerSign((address,uint256,bytes,uint256,uint256)):(address)",
      [ethereum.Value.fromTuple(winnerDetails)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _blacklistAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class LazyAuctionCall extends ethereum.Call {
  get inputs(): LazyAuctionCall__Inputs {
    return new LazyAuctionCall__Inputs(this);
  }

  get outputs(): LazyAuctionCall__Outputs {
    return new LazyAuctionCall__Outputs(this);
  }
}

export class LazyAuctionCall__Inputs {
  _call: LazyAuctionCall;

  constructor(call: LazyAuctionCall) {
    this._call = call;
  }

  get sellerDetails(): LazyAuctionCallSellerDetailsStruct {
    return changetype<LazyAuctionCallSellerDetailsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get winnerDetails(): LazyAuctionCallWinnerDetailsStruct {
    return changetype<LazyAuctionCallWinnerDetailsStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class LazyAuctionCall__Outputs {
  _call: LazyAuctionCall;

  constructor(call: LazyAuctionCall) {
    this._call = call;
  }
}

export class LazyAuctionCallSellerDetailsStruct extends ethereum.Tuple {
  get nonce(): BigInt {
    return this[0].toBigInt();
  }

  get seller(): Address {
    return this[1].toAddress();
  }

  get assetAddress(): Address {
    return this[2].toAddress();
  }

  get paymentAssetAddress(): Address {
    return this[3].toAddress();
  }

  get tokenId(): BigInt {
    return this[4].toBigInt();
  }

  get royality(): BigInt {
    return this[5].toBigInt();
  }

  get amount(): BigInt {
    return this[6].toBigInt();
  }

  get seller_signature(): Bytes {
    return this[7].toBytes();
  }

  get tokenUri(): string {
    return this[8].toString();
  }

  get startTime(): BigInt {
    return this[9].toBigInt();
  }

  get endTime(): BigInt {
    return this[10].toBigInt();
  }
}

export class LazyAuctionCallWinnerDetailsStruct extends ethereum.Tuple {
  get winnerAddress(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }

  get winnerSignature(): Bytes {
    return this[2].toBytes();
  }

  get bidTime(): BigInt {
    return this[3].toBigInt();
  }

  get nonce(): BigInt {
    return this[4].toBigInt();
  }
}

export class LazyBuyCall extends ethereum.Call {
  get inputs(): LazyBuyCall__Inputs {
    return new LazyBuyCall__Inputs(this);
  }

  get outputs(): LazyBuyCall__Outputs {
    return new LazyBuyCall__Outputs(this);
  }
}

export class LazyBuyCall__Inputs {
  _call: LazyBuyCall;

  constructor(call: LazyBuyCall) {
    this._call = call;
  }

  get sellerDetails(): LazyBuyCallSellerDetailsStruct {
    return changetype<LazyBuyCallSellerDetailsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class LazyBuyCall__Outputs {
  _call: LazyBuyCall;

  constructor(call: LazyBuyCall) {
    this._call = call;
  }
}

export class LazyBuyCallSellerDetailsStruct extends ethereum.Tuple {
  get nonce(): BigInt {
    return this[0].toBigInt();
  }

  get seller(): Address {
    return this[1].toAddress();
  }

  get assetAddress(): Address {
    return this[2].toAddress();
  }

  get paymentAssetAddress(): Address {
    return this[3].toAddress();
  }

  get tokenId(): BigInt {
    return this[4].toBigInt();
  }

  get royality(): BigInt {
    return this[5].toBigInt();
  }

  get amount(): BigInt {
    return this[6].toBigInt();
  }

  get seller_signature(): Bytes {
    return this[7].toBytes();
  }

  get tokenUri(): string {
    return this[8].toString();
  }

  get startTime(): BigInt {
    return this[9].toBigInt();
  }

  get endTime(): BigInt {
    return this[10].toBigInt();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetPlatFormFeePercentCall extends ethereum.Call {
  get inputs(): SetPlatFormFeePercentCall__Inputs {
    return new SetPlatFormFeePercentCall__Inputs(this);
  }

  get outputs(): SetPlatFormFeePercentCall__Outputs {
    return new SetPlatFormFeePercentCall__Outputs(this);
  }
}

export class SetPlatFormFeePercentCall__Inputs {
  _call: SetPlatFormFeePercentCall;

  constructor(call: SetPlatFormFeePercentCall) {
    this._call = call;
  }

  get _newPlatFormFeePercent(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPlatFormFeePercentCall__Outputs {
  _call: SetPlatFormFeePercentCall;

  constructor(call: SetPlatFormFeePercentCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
